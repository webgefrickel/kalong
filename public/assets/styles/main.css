/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

@font-face {
  src: url("../fonts/roboto-regular.woff2") format("woff2"), url("../fonts/roboto-regular.woff") format("woff");
  font-family: Roboto;
  font-weight: 400;
  font-style: normal;
  font-display: swap; }

[type='text'],
[type='tel'],
[type='email'],
[type='search'],
[type='number'],
[type='url'],
[type='password'],
[type='date'],
textarea {
  width: 100%;
  border: 1px solid currentColor;
  border-radius: 0;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none; }

button,
[type='submit'] {
  display: inline-block;
  cursor: pointer;
  text-decoration: none;
  text-align: center;
  border: 1px solid currentColor;
  border-radius: 0;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none; }

textarea {
  resize: vertical;
  vertical-align: top; }

select {
  position: relative;
  display: block; }

fieldset {
  margin: 0;
  margin-bottom: 1.5rem;
  padding: 0;
  border: 0; }

label {
  display: inline-block; }
  label[for] {
    cursor: pointer; }

[unselectable] {
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none; }

[disabled] {
  cursor: not-allowed; }

h1 {
  z-index: 1;
  font-size: 3rem;
  margin: 0;
  margin-bottom: 1.5rem; }

h2 {
  font-size: 2rem;
  margin: 0;
  margin-bottom: 1.5rem; }

h3 {
  font-size: 1.5rem;
  margin: 0;
  margin-bottom: 1.5rem; }

h4 {
  font-size: 1.25rem;
  margin: 0;
  margin-bottom: 1.5rem; }

h5 {
  font-size: 1rem;
  margin: 0;
  margin-bottom: 1.5rem; }

h6 {
  font-size: 0.875rem;
  margin: 0;
  margin-bottom: 1.5rem; }

a {
  text-decoration: none; }
  a:hover, a:active, a:focus {
    text-decoration: underline; }

ul,
dl,
ol {
  margin: 0;
  margin-bottom: 1.5rem;
  padding: 0;
  padding-left: 1.5rem; }
  ul ul,
  dl ul,
  ol ul, ul
  dl,
  dl
  dl,
  ol
  dl, ul
  ol,
  dl
  ol,
  ol
  ol {
    margin-bottom: 0; }

nav ul,
nav ol,
fieldset ul,
fieldset ol {
  padding: 0;
  list-style: none; }

audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle; }

audio,
iframe,
img,
video {
  max-width: 100%;
  height: auto; }

figure {
  margin: 0;
  margin-bottom: 1.5rem; }

:root {
  color: #000;
  background-color: #fff;
  box-sizing: border-box;
  font-size: 16px;
  -webkit-font-kerning: normal;
          font-kerning: normal;
  font-variant-ligatures: common-ligatures contextual;
  font-feature-settings: 'kern', 'liga', 'clig', 'calt';
  line-height: 1.5;
  -webkit-text-size-adjust: 100%;
          text-size-adjust: 100%; }

*, *::before, *::after {
  box-sizing: inherit; }

body {
  font-family: sans-serif;
  font-weight: 400;
  font-style: normal;
  background-color: #fff; }
  .fonts-loaded body {
    font-family: Roboto, sans-serif; }
  @media print {
    body * {
      display: none; }
    body::after {
      content: 'Please, do not waste paper by printing webpages.'; } }

::-moz-selection {
  background-color: #f78474;
  color: #fff;
  text-shadow: none; }

::selection {
  background-color: #f78474;
  color: #fff;
  text-shadow: none; }

table {
  margin: 0;
  margin-bottom: 1.5rem;
  width: 100%;
  border-collapse: collapse; }

td,
th {
  padding: 0;
  vertical-align: top; }

th {
  text-align: left; }

hr {
  margin-right: auto;
  margin-left: auto;
  margin-bottom: 1.5rem;
  margin-top: 0;
  display: block;
  width: 90%;
  border: 0;
  border-bottom: 1px solid currentColor; }

pre,
p {
  margin: 0;
  margin-bottom: 1.5rem; }

sub,
sup {
  position: relative;
  vertical-align: baseline;
  font-size: 75%;
  line-height: 0; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

.button {
  padding: 0.75rem;
  color: #000;
  background-color: #fff;
  border: 1px solid currentColor; }
  .button:hover, .button:active, .button:focus {
    color: #f78474;
    text-decoration: none; }

.example {
  padding: 1.5rem;
  border: 1px solid currentColor;
  box-shadow: 0 0 1.5rem 0 currentColor; }

.example--default {
  font-size: 100%; }

.example--large {
  padding: 3rem;
  font-size: 200%; }

.icon {
  position: relative;
  top: -0.0625em;
  display: inline-block;
  width: 1em;
  height: 1em;
  fill: currentColor; }

.icon--logo {
  fill: #f78474;
  width: 3rem;
  height: 3rem; }

.grid {
  margin-left: -1.5rem;
  padding: 0;
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  justify-content: space-between;
  list-style: none; }
  @media (min-width: 720px) {
    .grid {
      flex-direction: row; } }

.grid__column {
  padding-left: 1.5rem;
  flex: 1; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL25vZGVfbW9kdWxlcy9ub3JtYWxpemUuY3NzL25vcm1hbGl6ZS5jc3MiLCJtYWluLmNzcyIsIjQtcmVzZXQvZm9udHMuc2NzcyIsIi4uLy4uLzEtY29uZmlnL3NoYXJlZC5qc29uIiwiNC1yZXNldC9mb3Jtcy5zY3NzIiwiMi10b29scy9zcGFjaW5nLnNjc3MiLCIyLXRvb2xzL3V0aWxpdGllcy5zY3NzIiwiNC1yZXNldC9oZWFkaW5ncy5zY3NzIiwiMi10b29scy96LWluZGV4LnNjc3MiLCIyLXRvb2xzL2ZvbnRzLnNjc3MiLCI0LXJlc2V0L2xpbmtzLnNjc3MiLCIyLXRvb2xzL2F0dGVudGlvbi5zY3NzIiwiNC1yZXNldC9saXN0cy5zY3NzIiwiNC1yZXNldC9tZWRpYS5zY3NzIiwiNC1yZXNldC9yb290LnNjc3MiLCIyLXRvb2xzL2NvbG9ycy5zY3NzIiwiMS1jb25maWcvY29sb3JzLnNjc3MiLCIxLWNvbmZpZy9iYXNlLXVuaXRzLnNjc3MiLCIyLXRvb2xzL21lZGlhcXVlcnkuc2NzcyIsIjQtcmVzZXQvdGFibGVzLnNjc3MiLCI0LXJlc2V0L3RleHQuc2NzcyIsIi4uL3BhdHRlcm5zL2NvbXBvbmVudHMvYnV0dG9uL2J1dHRvbi5zY3NzIiwiLi4vcGF0dGVybnMvY29tcG9uZW50cy9leGFtcGxlL2V4YW1wbGUuc2NzcyIsIi4uL3BhdHRlcm5zL2NvbXBvbmVudHMvaWNvbi9pY29uLnNjc3MiLCIuLi9wYXR0ZXJucy9nbG9iYWxzL2dyaWQvZ3JpZC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDRFQUE0RTtBQUU1RTtnRkFDZ0Y7QUFFaEY7OztHQUdHO0FBRUg7RUFDRSxrQkFBaUI7RUFBRyxPQUFPO0VBQzNCLCtCQUE4QjtFQUFHLE9BQU8sRUFDekM7O0FBRUQ7Z0ZBQ2dGO0FBRWhGOztHQUVHO0FBRUg7RUFDRSxVQUFTLEVBQ1Y7O0FBRUQ7OztHQUdHO0FBRUg7RUFDRSxlQUFjO0VBQ2QsaUJBQWdCLEVBQ2pCOztBQUVEO2dGQUNnRjtBQUVoRjs7O0dBR0c7QUFFSDtFQUNFLHdCQUF1QjtFQUFHLE9BQU87RUFDakMsVUFBUztFQUFHLE9BQU87RUFDbkIsa0JBQWlCO0VBQUcsT0FBTyxFQUM1Qjs7QUFFRDs7O0dBR0c7QUFFSDtFQUNFLGtDQUFpQztFQUFHLE9BQU87RUFDM0MsZUFBYztFQUFHLE9BQU8sRUFDekI7O0FBRUQ7Z0ZBQ2dGO0FBRWhGOztHQUVHO0FBRUg7RUFDRSw4QkFBNkIsRUFDOUI7O0FBRUQ7OztHQUdHO0FBRUg7RUFDRSxvQkFBbUI7RUFBRyxPQUFPO0VBQzdCLDJCQUEwQjtFQUFHLE9BQU87RUFDcEMsMENBQWlDO1VBQWpDLGtDQUFpQztFQUFHLE9BQU8sRUFDNUM7O0FBRUQ7O0dBRUc7QUFFSDs7RUFFRSxvQkFBbUIsRUFDcEI7O0FBRUQ7OztHQUdHO0FBRUg7OztFQUdFLGtDQUFpQztFQUFHLE9BQU87RUFDM0MsZUFBYztFQUFHLE9BQU8sRUFDekI7O0FBRUQ7O0dBRUc7QUFFSDtFQUNFLGVBQWMsRUFDZjs7QUFFRDs7O0dBR0c7QUFFSDs7RUFFRSxlQUFjO0VBQ2QsZUFBYztFQUNkLG1CQUFrQjtFQUNsQix5QkFBd0IsRUFDekI7O0FBRUQ7RUFDRSxnQkFBZSxFQUNoQjs7QUFFRDtFQUNFLFlBQVcsRUFDWjs7QUFFRDtnRkFDZ0Y7QUFFaEY7O0dBRUc7QUFFSDtFQUNFLG1CQUFrQixFQUNuQjs7QUFFRDtnRkFDZ0Y7QUFFaEY7OztHQUdHO0FBRUg7Ozs7O0VBS0UscUJBQW9CO0VBQUcsT0FBTztFQUM5QixnQkFBZTtFQUFHLE9BQU87RUFDekIsa0JBQWlCO0VBQUcsT0FBTztFQUMzQixVQUFTO0VBQUcsT0FBTyxFQUNwQjs7QUFFRDs7O0dBR0c7QUFFSDs7RUFDUSxPQUFPO0VBQ2Isa0JBQWlCLEVBQ2xCOztBQUVEOzs7R0FHRztBQUVIOztFQUNTLE9BQU87RUFDZCxxQkFBb0IsRUFDckI7O0FBRUQ7O0dBRUc7QUFFSDs7OztFQUlFLDJCQUEwQixFQUMzQjs7QUFFRDs7R0FFRztBQUVIOzs7O0VBSUUsbUJBQWtCO0VBQ2xCLFdBQVUsRUFDWDs7QUFFRDs7R0FFRztBQUVIOzs7O0VBSUUsK0JBQThCLEVBQy9COztBQUVEOztHQUVHO0FBRUg7RUFDRSwrQkFBOEIsRUFDL0I7O0FBRUQ7Ozs7O0dBS0c7QUFFSDtFQUNFLHVCQUFzQjtFQUFHLE9BQU87RUFDaEMsZUFBYztFQUFHLE9BQU87RUFDeEIsZUFBYztFQUFHLE9BQU87RUFDeEIsZ0JBQWU7RUFBRyxPQUFPO0VBQ3pCLFdBQVU7RUFBRyxPQUFPO0VBQ3BCLG9CQUFtQjtFQUFHLE9BQU8sRUFDOUI7O0FBRUQ7O0dBRUc7QUFFSDtFQUNFLHlCQUF3QixFQUN6Qjs7QUFFRDs7R0FFRztBQUVIO0VBQ0UsZUFBYyxFQUNmOztBQUVEOzs7R0FHRztBQzVCSDs7RURnQ0UsdUJBQXNCO0VBQUcsT0FBTztFQUNoQyxXQUFVO0VBQUcsT0FBTyxFQUNyQjs7QUFFRDs7R0FFRztBQzVCSDs7RURnQ0UsYUFBWSxFQUNiOztBQUVEOzs7R0FHRztBQzlCSDtFRGlDRSw4QkFBNkI7RUFBRyxPQUFPO0VBQ3ZDLHFCQUFvQjtFQUFHLE9BQU8sRUFDL0I7O0FBRUQ7O0dBRUc7QUM5Qkg7RURpQ0UseUJBQXdCLEVBQ3pCOztBQUVEOzs7R0FHRztBQUVIO0VBQ0UsMkJBQTBCO0VBQUcsT0FBTztFQUNwQyxjQUFhO0VBQUcsT0FBTyxFQUN4Qjs7QUFFRDtnRkFDZ0Y7QUFFaEY7O0dBRUc7QUFFSDtFQUNFLGVBQWMsRUFDZjs7QUFFRDs7R0FFRztBQUVIO0VBQ0UsbUJBQWtCLEVBQ25COztBQUVEO2dGQUNnRjtBQUVoRjs7R0FFRztBQUVIO0VBQ0UsY0FBYSxFQUNkOztBQUVEOztHQUVHO0FDeENIO0VEMkNFLGNBQWEsRUFDZDs7QUU5VUs7RUFDRSw4R0FBeUc7RUFDekcsb0JDUHlCO0VEUXpCLGlCQ1IwRDtFRFMxRCxtQkNUd0U7RURVeEUsbUJBQWtCLEVBQUE7O0FEdVMxQjs7Ozs7Ozs7O0VHeFNFLFlBQVc7RUFDWCwrQkFBOEI7RUFDOUIsaUJBQWdCO0VBQ2hCLHlCQUFnQjtLQUFoQixzQkFBZ0I7VUFBaEIsaUJBQWdCLEVBQ2pCOztBQUVEOztFQUVFLHNCQUFxQjtFQUNyQixnQkFBZTtFQUNmLHNCQUFxQjtFQUNyQixtQkFBa0I7RUFDbEIsK0JBQThCO0VBQzlCLGlCQUFnQjtFQUNoQix5QkFBZ0I7S0FBaEIsc0JBQWdCO1VBQWhCLGlCQUFnQixFQUNqQjs7QUFHRDtFQUNFLGlCQUFnQjtFQUNoQixvQkFBbUIsRUFDcEI7O0FBRUQ7RUFDRSxtQkFBa0I7RUFDbEIsZUFBYyxFQUNmOztBQUdEO0VDWFEsVUNISztFRGFMLHNCQ0x5QjtFRlEvQixXQUFVO0VBQ1YsVUFBUyxFQUNWOztBQUlEO0VBQ0Usc0JBQXFCLEVBS3RCO0VBTkQ7SUFJSSxnQkFBZSxFQUNoQjs7QUh5U0g7RUdwU0UsMEJBQWlCO0tBQWpCLHVCQUFpQjtNQUFqQixzQkFBaUI7VUFBakIsa0JBQWlCLEVBQ2xCOztBSHNTRDtFR25TRSxvQkFBbUIsRUFDcEI7O0FHOUREO0VDdUJFLFdBVE87RUNDUCxnQkhIeUQ7RURnQm5ELFVDSEs7RURhTCxzQkNMeUIsRUM3QmhDOztBQUVEO0VFU0UsZ0JISHlEO0VEZ0JuRCxVQ0hLO0VEYUwsc0JDTHlCLEVDeEJoQzs7QUFFRDtFRUlFLGtCSEh5RDtFRGdCbkQsVUNISztFRGFMLHNCQ0x5QixFQ25CaEM7O0FBRUQ7RUVERSxtQkhIeUQ7RURnQm5ELFVDSEs7RURhTCxzQkNMeUIsRUNkaEM7O0FBRUQ7RUVORSxnQkhIeUQ7RURnQm5ELFVDSEs7RURhTCxzQkNMeUIsRUNUaEM7O0FBRUQ7RUVYRSxvQkhIeUQ7RURnQm5ELFVDSEs7RURhTCxzQkNMeUIsRUNKaEM7O0FHN0JEO0VBQ0Usc0JBQXFCLEVBS3RCO0VDSkM7SURFRSwyQkFBMEIsRUNFM0I7O0FDTkg7OztFUDRCUSxVQ0hLO0VEYUwsc0JDTHlCO0VENEJ6QixXQ3BDSztFRDhDTCxxQkN0Q3lCLEVNeEJoQztFQVREOzs7Ozs7Ozs7Ozs7O0lQc0NRLGlCQ2JLLEVNakJWOztBQUlIOzs7O0VQaURRLFdDcENLO0VNUlQsaUJBQWdCLEVBQ2pCOztBQ2hCSDs7Ozs7O0VBTUUsdUJBQXNCLEVBQ3ZCOztBQUdEOzs7O0VBSUUsZ0JBQWU7RUFDZixhQUFZLEVBQ2I7O0FBRUQ7RVJRUSxVQ0hLO0VEYUwsc0JDTHlCLEVPWGhDOztBQ3RCRDtFQ2VFLFlDWGdCO0VEZWhCLHVCQ2RnQjtFRkZoQix1QkFBc0I7RUFDdEIsZ0JHSG1CO0VISW5CLDZCQUFvQjtVQUFwQixxQkFBb0I7RUFDcEIsb0RBQW1EO0VBQ25ELHNEQUFxRDtFQUNyRCxpQkdOb0I7RUhPcEIsK0JBQXNCO1VBQXRCLHVCQUFzQixFQUN2Qjs7QUFFRDtFQUlJLG9CQUFtQixFQUNwQjs7QUFJSDtFTGtCSSx3Qk50Q2tEO0VNNERwRCxpQk41RGdFO0VNMkVoRSxtQk4zRThFO0VZa0I5RSx1QkNkZ0IsRUY4QmpCO0VMTUc7SUFDRSxnQ056Q2dELEVNMENqRDtFU3JDRDtJSmVKO01BT00sY0FBYSxFQUNkO0lBUkw7TUFXTSw0REFBMkQsRUFDNUQsRUFBQTs7QUFLTDtFQ25CRSwwQkNiaUI7RURTakIsWUNWZ0I7RUZvQ2hCLGtCQUFpQixFQUNsQjs7QUFKRDtFQ25CRSwwQkNiaUI7RURTakIsWUNWZ0I7RUZvQ2hCLGtCQUFpQixFQUNsQjs7QUt6Q0Q7RWQyQlEsVUNISztFRGFMLHNCQ0x5QjtFYTlCL0IsWUFBVztFQUNYLDBCQUF5QixFQUMxQjs7QUFHRDs7RUFFRSxXQUFVO0VBQ1Ysb0JBQW1CLEVBQ3BCOztBQUdEO0VBQ0UsaUJBQWdCLEVBQ2pCOztBQ2ZEO0VmK0JRLG1CZTlCZ0I7RWYrQmhCLGtCZS9CZ0I7RWZtQ2hCLHNCQ0x5QjtFREt6QixjQ2JLO0VjckJYLGVBQWM7RUFDZCxXQUFVO0VBQ1YsVUFBUztFQUNULHNDQUFxQyxFQUN0Qzs7QUFFRDs7RWZrQlEsVUNISztFRGFMLHNCQ0x5QixFY3BCaEM7O0FBRUQ7O0VBRUUsbUJBQWtCO0VBQ2xCLHlCQUF3QjtFQUN4QixlQUFjO0VBQ2QsZUFBYyxFQUNmOztBQUVEO0VBQ0UsZ0JBQWUsRUFDaEI7O0FBRUQ7RUFDRSxZQUFXLEVBQ1o7O0FDN0JEO0VoQjZEUSxpQkM1QnlCO0VTbEIvQixZQ1hnQjtFRGVoQix1QkNkZ0I7RUtEaEIsK0JBQThCLEVBTS9CO0VWUkM7SUlhQSxlQ1RpQjtJS0VmLHNCQUFxQixFVkZ0Qjs7QVdOSDtFakI2RFEsZ0JDNUJ5QjtFZ0IvQi9CLCtCQUE4QjtFQUM5QixzQ0FBeUMsRUFDMUM7O0FBRUQ7RUFDRSxnQkFBZSxFQUNoQjs7QUFFRDtFakJtRFEsY0M1QnlCO0VnQnJCL0IsZ0JBQWUsRUFDaEI7O0FDVEQ7RUFDRSxtQkFBa0I7RUFDbEIsZUFBYztFQUNkLHNCQUFxQjtFQUNyQixXQUFVO0VBQ1YsWUFBVztFQUNYLG1CQUFrQixFQUNuQjs7QUFHRDtFUmFFLGNDckJpQjtFT1VqQixZTlIwQjtFTVMxQixhTlQwQixFTVUzQjs7QUNMRDtFbkJ5QlEscUJDTHlCO0VENEJ6QixXQ3BDSztFa0JUWCxjQUFhO0VBQ2IsdUJBQXNCO0VBQ3RCLGdCQUFlO0VBQ2YsK0JBQThCO0VBQzlCLGlCQUFnQixFQU9qQjtFTk1LO0lNcEJOO01BWUksb0JBQW1CLEVBRXRCLEVBQUE7O0FBRUQ7RW5CMENRLHFCQ3RDeUI7RWtCRi9CLFFBQU8sRUFDUiIsImZpbGUiOiJtYWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qISBub3JtYWxpemUuY3NzIHY4LjAuMCB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cblxuLyogRG9jdW1lbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgbGluZSBoZWlnaHQgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpbiBpT1MuXG4gKi9cblxuaHRtbCB7XG4gIGxpbmUtaGVpZ2h0OiAxLjE1OyAvKiAxICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xufVxuXG4vKiBTZWN0aW9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuYm9keSB7XG4gIG1hcmdpbjogMDtcbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXG4gKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxuICovXG5cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7XG59XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cbiAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxuICovXG5cbmhyIHtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7IC8qIDEgKi9cbiAgaGVpZ2h0OiAwOyAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlOyAvKiAyICovXG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5wcmUge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cbn1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgb24gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxuICovXG5cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbn1cblxuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gQ2hyb21lIDU3LVxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cbiAqL1xuXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IG5vbmU7IC8qIDEgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IC8qIDIgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkOyAvKiAyICovXG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmNvZGUsXG5rYmQsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc21hbGwge1xuICBmb250LXNpemU6IDgwJTtcbn1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cbiAqIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07XG59XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtO1xufVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAuXG4gKi9cblxuaW1nIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xufVxuXG4vKiBGb3Jtc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBDaGFuZ2UgdGhlIGZvbnQgc3R5bGVzIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS5cbiAqL1xuXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250LWZhbWlseTogaW5oZXJpdDsgLyogMSAqL1xuICBmb250LXNpemU6IDEwMCU7IC8qIDEgKi9cbiAgbGluZS1oZWlnaHQ6IDEuMTU7IC8qIDEgKi9cbiAgbWFyZ2luOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKiAxLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlLlxuICovXG5cbmJ1dHRvbixcbmlucHV0IHsgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cbiAqIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cbiAqL1xuXG5idXR0b24sXG5zZWxlY3QgeyAvKiAxICovXG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKi9cblxuYnV0dG9uLFxuW3R5cGU9XCJidXR0b25cIl0sXG5bdHlwZT1cInJlc2V0XCJdLFxuW3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIGJvcmRlciBhbmQgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwiYnV0dG9uXCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJyZXNldFwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwic3VibWl0XCJdOjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwO1xufVxuXG4vKipcbiAqIFJlc3RvcmUgdGhlIGZvY3VzIHN0eWxlcyB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cbiAqL1xuXG5idXR0b246LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cImJ1dHRvblwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwicmVzZXRcIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInN1Ym1pdFwiXTotbW96LWZvY3VzcmluZyB7XG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDtcbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cblxuZmllbGRzZXQge1xuICBwYWRkaW5nOiAwLjM1ZW0gMC43NWVtIDAuNjI1ZW07XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRS5cbiAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cbiAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcbiAqICAgIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmxlZ2VuZCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgY29sb3I6IGluaGVyaXQ7IC8qIDIgKi9cbiAgZGlzcGxheTogdGFibGU7IC8qIDEgKi9cbiAgbWF4LXdpZHRoOiAxMDAlOyAvKiAxICovXG4gIHBhZGRpbmc6IDA7IC8qIDMgKi9cbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDsgLyogMSAqL1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG4gKi9cblxucHJvZ3Jlc3Mge1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRSAxMCsuXG4gKi9cblxudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC5cbiAqIDIuIFJlbW92ZSB0aGUgcGFkZGluZyBpbiBJRSAxMC5cbiAqL1xuXG5bdHlwZT1cImNoZWNrYm94XCJdLFxuW3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCBidXR0b25zIGluIENocm9tZS5cbiAqL1xuXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSBhbmQgU2FmYXJpLlxuICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXG4gKi9cblxuW3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgLyogMSAqL1xuICBvdXRsaW5lLW9mZnNldDogLTJweDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBtYWNPUy5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxuICovXG5cbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMSAqL1xuICBmb250OiBpbmhlcml0OyAvKiAyICovXG59XG5cbi8qIEludGVyYWN0aXZlXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUgMTArLCBhbmQgRmlyZWZveC5cbiAqL1xuXG5kZXRhaWxzIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc3VtbWFyeSB7XG4gIGRpc3BsYXk6IGxpc3QtaXRlbTtcbn1cblxuLyogTWlzY1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMCsuXG4gKi9cblxudGVtcGxhdGUge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLlxuICovXG5cbltoaWRkZW5dIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbiIsIi8qISBub3JtYWxpemUuY3NzIHY4LjAuMCB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cbi8qIERvY3VtZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBsaW5lIGhlaWdodCBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBQcmV2ZW50IGFkanVzdG1lbnRzIG9mIGZvbnQgc2l6ZSBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2VzIGluIGlPUy5cbiAqL1xuaHRtbCB7XG4gIGxpbmUtaGVpZ2h0OiAxLjE1O1xuICAvKiAxICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLyogMiAqLyB9XG5cbi8qIFNlY3Rpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmJvZHkge1xuICBtYXJnaW46IDA7IH1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXG4gKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxuICovXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwOyB9XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cbiAqL1xuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgLyogMSAqL1xuICBoZWlnaHQ6IDA7XG4gIC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnByZSB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTtcbiAgLyogMiAqLyB9XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKi9cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsgfVxuXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBDaHJvbWUgNTctXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxuICovXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IG5vbmU7XG4gIC8qIDEgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gIC8qIDIgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmNvZGUsXG5rYmQsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuICAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuc21hbGwge1xuICBmb250LXNpemU6IDgwJTsgfVxuXG4vKipcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxuICogYWxsIGJyb3dzZXJzLlxuICovXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTsgfVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTsgfVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgdGhlIGJvcmRlciBvbiBpbWFnZXMgaW5zaWRlIGxpbmtzIGluIElFIDEwLlxuICovXG5pbWcge1xuICBib3JkZXItc3R5bGU6IG5vbmU7IH1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIENoYW5nZSB0aGUgZm9udCBzdHlsZXMgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxuICovXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDEwMCU7XG4gIC8qIDEgKi9cbiAgbGluZS1oZWlnaHQ6IDEuMTU7XG4gIC8qIDEgKi9cbiAgbWFyZ2luOiAwO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXG4gKi9cbmJ1dHRvbixcbmlucHV0IHtcbiAgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTsgfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxuICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxuICovXG5idXR0b24sXG5zZWxlY3Qge1xuICAvKiAxICovXG4gIHRleHQtdHJhbnNmb3JtOiBub25lOyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqL1xuYnV0dG9uLFxuW3R5cGU9XCJidXR0b25cIl0sXG5bdHlwZT1cInJlc2V0XCJdLFxuW3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwiYnV0dG9uXCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJyZXNldFwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwic3VibWl0XCJdOjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwOyB9XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5idXR0b246LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cImJ1dHRvblwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwicmVzZXRcIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInN1Ym1pdFwiXTotbW96LWZvY3VzcmluZyB7XG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDsgfVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuZmllbGRzZXQge1xuICBwYWRkaW5nOiAwLjM1ZW0gMC43NWVtIDAuNjI1ZW07IH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLlxuICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxuICogICAgYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmxlZ2VuZCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgY29sb3I6IGluaGVyaXQ7XG4gIC8qIDIgKi9cbiAgZGlzcGxheTogdGFibGU7XG4gIC8qIDEgKi9cbiAgbWF4LXdpZHRoOiAxMDAlO1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDMgKi9cbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbiAgLyogMSAqLyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xucHJvZ3Jlc3Mge1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFIDEwKy5cbiAqL1xudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bzsgfVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIElFIDEwLlxuICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLlxuICovXG5bdHlwZT1cImNoZWNrYm94XCJdLFxuW3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuICovXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cbiAqL1xuW3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcbiAgLyogMSAqL1xuICBvdXRsaW5lLW9mZnNldDogLTJweDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIG1hY09TLlxuICovXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gKi9cbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbiAgLyogMSAqL1xuICBmb250OiBpbmhlcml0O1xuICAvKiAyICovIH1cblxuLyogSW50ZXJhY3RpdmVcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUgMTArLCBhbmQgRmlyZWZveC5cbiAqL1xuZGV0YWlscyB7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnN1bW1hcnkge1xuICBkaXNwbGF5OiBsaXN0LWl0ZW07IH1cblxuLyogTWlzY1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTArLlxuICovXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC5cbiAqL1xuW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbkBmb250LWZhY2Uge1xuICBzcmM6IHVybChcIi4uL2ZvbnRzL3JvYm90by1yZWd1bGFyLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIuLi9mb250cy9yb2JvdG8tcmVndWxhci53b2ZmXCIpIGZvcm1hdChcIndvZmZcIik7XG4gIGZvbnQtZmFtaWx5OiBSb2JvdG87XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwOyB9XG5cblt0eXBlPSd0ZXh0J10sXG5bdHlwZT0ndGVsJ10sXG5bdHlwZT0nZW1haWwnXSxcblt0eXBlPSdzZWFyY2gnXSxcblt0eXBlPSdudW1iZXInXSxcblt0eXBlPSd1cmwnXSxcblt0eXBlPSdwYXNzd29yZCddLFxuW3R5cGU9J2RhdGUnXSxcbnRleHRhcmVhIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGJvcmRlcjogMXB4IHNvbGlkIGN1cnJlbnRDb2xvcjtcbiAgYm9yZGVyLXJhZGl1czogMDtcbiAgYXBwZWFyYW5jZTogbm9uZTsgfVxuXG5idXR0b24sXG5bdHlwZT0nc3VibWl0J10ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGJvcmRlcjogMXB4IHNvbGlkIGN1cnJlbnRDb2xvcjtcbiAgYm9yZGVyLXJhZGl1czogMDtcbiAgYXBwZWFyYW5jZTogbm9uZTsgfVxuXG50ZXh0YXJlYSB7XG4gIHJlc2l6ZTogdmVydGljYWw7XG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7IH1cblxuc2VsZWN0IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG5maWVsZHNldCB7XG4gIG1hcmdpbjogMDtcbiAgbWFyZ2luLWJvdHRvbTogMS41cmVtO1xuICBwYWRkaW5nOiAwO1xuICBib3JkZXI6IDA7IH1cblxubGFiZWwge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cbiAgbGFiZWxbZm9yXSB7XG4gICAgY3Vyc29yOiBwb2ludGVyOyB9XG5cblt1bnNlbGVjdGFibGVdIHtcbiAgdXNlci1zZWxlY3Q6IG5vbmU7IH1cblxuW2Rpc2FibGVkXSB7XG4gIGN1cnNvcjogbm90LWFsbG93ZWQ7IH1cblxuaDEge1xuICB6LWluZGV4OiAxO1xuICBmb250LXNpemU6IDNyZW07XG4gIG1hcmdpbjogMDtcbiAgbWFyZ2luLWJvdHRvbTogMS41cmVtOyB9XG5cbmgyIHtcbiAgZm9udC1zaXplOiAycmVtO1xuICBtYXJnaW46IDA7XG4gIG1hcmdpbi1ib3R0b206IDEuNXJlbTsgfVxuXG5oMyB7XG4gIGZvbnQtc2l6ZTogMS41cmVtO1xuICBtYXJnaW46IDA7XG4gIG1hcmdpbi1ib3R0b206IDEuNXJlbTsgfVxuXG5oNCB7XG4gIGZvbnQtc2l6ZTogMS4yNXJlbTtcbiAgbWFyZ2luOiAwO1xuICBtYXJnaW4tYm90dG9tOiAxLjVyZW07IH1cblxuaDUge1xuICBmb250LXNpemU6IDFyZW07XG4gIG1hcmdpbjogMDtcbiAgbWFyZ2luLWJvdHRvbTogMS41cmVtOyB9XG5cbmg2IHtcbiAgZm9udC1zaXplOiAwLjg3NXJlbTtcbiAgbWFyZ2luOiAwO1xuICBtYXJnaW4tYm90dG9tOiAxLjVyZW07IH1cblxuYSB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuICBhOmhvdmVyLCBhOmFjdGl2ZSwgYTpmb2N1cyB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IH1cblxudWwsXG5kbCxcbm9sIHtcbiAgbWFyZ2luOiAwO1xuICBtYXJnaW4tYm90dG9tOiAxLjVyZW07XG4gIHBhZGRpbmc6IDA7XG4gIHBhZGRpbmctbGVmdDogMS41cmVtOyB9XG4gIHVsIHVsLFxuICBkbCB1bCxcbiAgb2wgdWwsIHVsXG4gIGRsLFxuICBkbFxuICBkbCxcbiAgb2xcbiAgZGwsIHVsXG4gIG9sLFxuICBkbFxuICBvbCxcbiAgb2xcbiAgb2wge1xuICAgIG1hcmdpbi1ib3R0b206IDA7IH1cblxubmF2IHVsLFxubmF2IG9sLFxuZmllbGRzZXQgdWwsXG5maWVsZHNldCBvbCB7XG4gIHBhZGRpbmc6IDA7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7IH1cblxuYXVkaW8sXG5jYW52YXMsXG5pZnJhbWUsXG5pbWcsXG5zdmcsXG52aWRlbyB7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IH1cblxuYXVkaW8sXG5pZnJhbWUsXG5pbWcsXG52aWRlbyB7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiBhdXRvOyB9XG5cbmZpZ3VyZSB7XG4gIG1hcmdpbjogMDtcbiAgbWFyZ2luLWJvdHRvbTogMS41cmVtOyB9XG5cbjpyb290IHtcbiAgY29sb3I6ICMwMDA7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgZm9udC1rZXJuaW5nOiBub3JtYWw7XG4gIGZvbnQtdmFyaWFudC1saWdhdHVyZXM6IGNvbW1vbi1saWdhdHVyZXMgY29udGV4dHVhbDtcbiAgZm9udC1mZWF0dXJlLXNldHRpbmdzOiAna2VybicsICdsaWdhJywgJ2NsaWcnLCAnY2FsdCc7XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG4gIHRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IH1cblxuKiwgKjo6YmVmb3JlLCAqOjphZnRlciB7XG4gIGJveC1zaXppbmc6IGluaGVyaXQ7IH1cblxuYm9keSB7XG4gIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7IH1cbiAgLmZvbnRzLWxvYWRlZCBib2R5IHtcbiAgICBmb250LWZhbWlseTogUm9ib3RvLCBzYW5zLXNlcmlmOyB9XG4gIEBtZWRpYSBwcmludCB7XG4gICAgYm9keSAqIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgICBib2R5OjphZnRlciB7XG4gICAgICBjb250ZW50OiAnUGxlYXNlLCBkbyBub3Qgd2FzdGUgcGFwZXIgYnkgcHJpbnRpbmcgd2VicGFnZXMuJzsgfSB9XG5cbjo6c2VsZWN0aW9uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y3ODQ3NDtcbiAgY29sb3I6ICNmZmY7XG4gIHRleHQtc2hhZG93OiBub25lOyB9XG5cbnRhYmxlIHtcbiAgbWFyZ2luOiAwO1xuICBtYXJnaW4tYm90dG9tOiAxLjVyZW07XG4gIHdpZHRoOiAxMDAlO1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyB9XG5cbnRkLFxudGgge1xuICBwYWRkaW5nOiAwO1xuICB2ZXJ0aWNhbC1hbGlnbjogdG9wOyB9XG5cbnRoIHtcbiAgdGV4dC1hbGlnbjogbGVmdDsgfVxuXG5ociB7XG4gIG1hcmdpbi1yaWdodDogYXV0bztcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1ib3R0b206IDEuNXJlbTtcbiAgbWFyZ2luLXRvcDogMDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiA5MCU7XG4gIGJvcmRlcjogMDtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIGN1cnJlbnRDb2xvcjsgfVxuXG5wcmUsXG5wIHtcbiAgbWFyZ2luOiAwO1xuICBtYXJnaW4tYm90dG9tOiAxLjVyZW07IH1cblxuc3ViLFxuc3VwIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDsgfVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07IH1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07IH1cblxuLmJ1dHRvbiB7XG4gIHBhZGRpbmc6IDAuNzVyZW07XG4gIGNvbG9yOiAjMDAwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICBib3JkZXI6IDFweCBzb2xpZCBjdXJyZW50Q29sb3I7IH1cbiAgLmJ1dHRvbjpob3ZlciwgLmJ1dHRvbjphY3RpdmUsIC5idXR0b246Zm9jdXMge1xuICAgIGNvbG9yOiAjZjc4NDc0O1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuXG4uZXhhbXBsZSB7XG4gIHBhZGRpbmc6IDEuNXJlbTtcbiAgYm9yZGVyOiAxcHggc29saWQgY3VycmVudENvbG9yO1xuICBib3gtc2hhZG93OiAwIDAgMS41cmVtIDAgY3VycmVudENvbG9yOyB9XG5cbi5leGFtcGxlLS1kZWZhdWx0IHtcbiAgZm9udC1zaXplOiAxMDAlOyB9XG5cbi5leGFtcGxlLS1sYXJnZSB7XG4gIHBhZGRpbmc6IDNyZW07XG4gIGZvbnQtc2l6ZTogMjAwJTsgfVxuXG4uaWNvbiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdG9wOiAtMC4wNjI1ZW07XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgd2lkdGg6IDFlbTtcbiAgaGVpZ2h0OiAxZW07XG4gIGZpbGw6IGN1cnJlbnRDb2xvcjsgfVxuXG4uaWNvbi0tbG9nbyB7XG4gIGZpbGw6ICNmNzg0NzQ7XG4gIHdpZHRoOiAzcmVtO1xuICBoZWlnaHQ6IDNyZW07IH1cblxuLmdyaWQge1xuICBtYXJnaW4tbGVmdDogLTEuNXJlbTtcbiAgcGFkZGluZzogMDtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGxpc3Qtc3R5bGU6IG5vbmU7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDcyMHB4KSB7XG4gICAgLmdyaWQge1xuICAgICAgZmxleC1kaXJlY3Rpb246IHJvdzsgfSB9XG5cbi5ncmlkX19jb2x1bW4ge1xuICBwYWRkaW5nLWxlZnQ6IDEuNXJlbTtcbiAgZmxleDogMTsgfVxuIiwiLy8gY3VzdG9tIEBmb250LWZhY2UgcnVsZXMgYXJlIGF1dG9tYXRpY2FsbHkgZ2VuZXJhdGVkIGZyb20gZm9udC1jb25maWdcbkBpZiB2YXJpYWJsZS1leGlzdHMoZm9udHMpIHtcbiAgQGVhY2ggJGZvbnQtaWQsICRmb250LWRlZmluaXRpb24gaW4gJGZvbnRzIHtcbiAgICBAaWYgbWFwLWdldCgkZm9udC1kZWZpbml0aW9uLCBmb250ZmFjZSkgPT0gdHJ1ZSB7XG4gICAgICAkZm9udGZpbGU6IG1hcC1nZXQoJGZvbnQtZGVmaW5pdGlvbiwgZmlsZSk7XG5cbiAgICAgIEBmb250LWZhY2Uge1xuICAgICAgICBzcmM6IHVybCgnLi4vZm9udHMvI3skZm9udGZpbGV9LndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLCB1cmwoJy4uL2ZvbnRzLyN7JGZvbnRmaWxlfS53b2ZmJykgZm9ybWF0KCd3b2ZmJyk7XG4gICAgICAgIGZvbnQtZmFtaWx5OiBtYXAtZ2V0KCRmb250LWRlZmluaXRpb24sIGZhbWlseSk7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiBtYXAtZ2V0KCRmb250LWRlZmluaXRpb24sIHdlaWdodCk7XG4gICAgICAgIGZvbnQtc3R5bGU6IHVucXVvdGUobWFwLWdldCgkZm9udC1kZWZpbml0aW9uLCBzdHlsZSkpO1xuICAgICAgICBmb250LWRpc3BsYXk6IHN3YXA7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCIkYnJlYWtwb2ludHM6IChzOiA0ODAsbTogNjQwLGw6IDcyMCx4bDogOTYwLHh4bDogMTEwMCx4eHhsOiAxNDAwLGN1c3RvbTogKG1heC13aWR0aDogMzBlbSkpO1xuJGZvbnRzOiAoZGVmYXVsdDogKGZhbWlseTogUm9ib3RvLGZhbGxiYWNrOiBzYW5zLXNlcmlmLHdlaWdodDogNDAwLHN0eWxlOiBub3JtYWwsZm9udGZhY2U6IHRydWUsZmlsZTogcm9ib3RvLXJlZ3VsYXIpKTsiLCIvLyBkZWZhdWx0IHN0eWxlcyBmb3IgdGV4dC1pbnB1dCBmb3JtcyBmaWVsZHNcblt0eXBlPSd0ZXh0J10sXG5bdHlwZT0ndGVsJ10sXG5bdHlwZT0nZW1haWwnXSxcblt0eXBlPSdzZWFyY2gnXSxcblt0eXBlPSdudW1iZXInXSxcblt0eXBlPSd1cmwnXSxcblt0eXBlPSdwYXNzd29yZCddLFxuW3R5cGU9J2RhdGUnXSxcbnRleHRhcmVhIHtcbiAgd2lkdGg6IDEwMCU7IC8vIHdyYXAgZ3JpZC9kaXYvcCBhcm91bmQgaW5wdXRzXG4gIGJvcmRlcjogMXB4IHNvbGlkIGN1cnJlbnRDb2xvcjtcbiAgYm9yZGVyLXJhZGl1czogMDtcbiAgYXBwZWFyYW5jZTogbm9uZTsgLy8gbm8gcm91bmRlZCBpbnB1dHMgZXRjLlxufVxuXG5idXR0b24sXG5bdHlwZT0nc3VibWl0J10ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGJvcmRlcjogMXB4IHNvbGlkIGN1cnJlbnRDb2xvcjtcbiAgYm9yZGVyLXJhZGl1czogMDtcbiAgYXBwZWFyYW5jZTogbm9uZTtcbn1cblxuLy8gYWxsb3cgcmVzaXppbmcgb2YgdGV4dGFyZWFzIHZlcnRpY2FsbHlcbnRleHRhcmVhIHtcbiAgcmVzaXplOiB2ZXJ0aWNhbDtcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcbn1cblxuc2VsZWN0IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLy8gbm8gYm9yZGVyL3BhZGRpbmcvbWFyZ2luIGZvciB0aGUgZmllbGRzZXRcbmZpZWxkc2V0IHtcbiAgQGluY2x1ZGUgbWFyZ2luKGEgMCwgYiAxKTtcbiAgcGFkZGluZzogMDtcbiAgYm9yZGVyOiAwO1xufVxuXG4vLyBwb3NpdGlvbiBsYWJlbHMgb24gdG9wIG9mIHRoZWlyIHJlbGF0ZWQgaW5wdXRzIGJ5IGRlZmF1bHQsXG4vLyBhbmQgZ2l2ZSB0aGVtIGEgaGludCB0byBtYWtlIHRoZW0gY2xpY2thYmxlIGJ5IHNldHRpbmcgY3Vyc29yXG5sYWJlbCB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcblxuICAmW2Zvcl0geyAvLyBhZGQgcG9pbnRlci1jdXJzb3IgaWYgYXNzb2NpYXRlZCB0byBpbnB1dFxuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgfVxufVxuXG4vLyBkb250IGFsbG93IHVuc2VsZWN0YWJsZSBlbGVtZW50cyB0byBiZSBzZWxlY3RlZFxuW3Vuc2VsZWN0YWJsZV0ge1xuICB1c2VyLXNlbGVjdDogbm9uZTtcbn1cblxuW2Rpc2FibGVkXSB7XG4gIGN1cnNvcjogbm90LWFsbG93ZWQ7XG59XG4iLCIvLyBjcmVhdGVzIG1hcmdpbnMsIGJ5IGRlZmF1bHQgKHdpdGhvdXQgYW55IHBhcmFtZXRlcnMpIG9ubHkgbWFyZ2luLWJvdHRvbVxuLy8gd2l0aCAkYmFzZS11bml0IC0tIGRlZmF1bHQgcmh5dGhtLCBvciBmb3IgZXZlcnkgc2lkZS92YWx1ZS1wYWlyIHdpdGhcbi8vIHRoZWlyIHNob3J0IHZhcmlhbnRzOlxuLy9cbi8vIHVzYWdlIGV4YW1wbGVzOlxuLy8gQGluY2x1ZGUgbWFyZ2luOyA9PT4gbWFyZ2luLWJvdHRvbTogJGJhc2UtdW5pdDtcbi8vIEBpbmNsdWRlIG1hcmdpbigyKSA9PT4gd2FybmluZyEsIHRoaXMgaXMgbm90IGdvbm5hIHdvcmtcbi8vIEBpbmNsdWRlIG1hcmdpbihiIDIpID09PiBtYXJnaW4tYm90dG9tOiAkYmFzZS11bml0ICogMjtcbi8vIEBpbmNsdWRlIG1hcmdpbihhIDIpID09PiBtYXJnaW46ICRiYXNlLXVuaXQgKiAyO1xuLy8gQGluY2x1ZGUgbWFyZ2luKGEgMC41LCBiIDEpID09PiBtYXJnaW46ICRiYXNlLXVuaXQgKiAwLjU7IG1hcmdpbi1ib3R0b206ICRiYXNlLXVuaXQ7XG4vLyBAaW5jbHVkZSBtYXJnaW4ociAxLCBsIDEyJSkgPT0+IG1hcmdpbi1yaWdodDogYmFzZS11bml0OyBtYXJnaW4tbGVmdDogMTIlO1xuLy8gQGluY2x1ZGUgbWFyZ2luKHIgMCwgdCBhdXRvKSA9PT4gbWFyZ2luLXJpZ2h0OiAwOyBtYXJnaW4tdG9wOiBhdXRvO1xuLy8gQGluY2x1ZGUgbWFyZ2luKHYgMSkgPT0+IG1hcmdpbi1yaWdodDogJGJhc2UtdW5pdDsgbWFyZ2luLWxlZnQ6ICRiYXNlLXVuaXQ7XG4vLyBAaW5jbHVkZSBtYXJnaW4oaCAxKSA9PT4gbWFyZ2luLXRvcDogJGJhc2UtdW5pdDsgbWFyZ2luLWJvdHRvbTogJGJhc2UtdW5pdDtcbkBtaXhpbiBtYXJnaW4oJHNwYWNpbmctYXJncy4uLikge1xuICAvLyBkZWZhdWx0IGNhc2UgZm9yIHNwYWNpbmcgLS0gbWFyZ2luIGJvdHRvbVxuICBAaWYgbGVuZ3RoKCRzcGFjaW5nLWFyZ3MpID09IDAge1xuICAgIEBpZiB2YXJpYWJsZS1leGlzdHMoYmFzZS11bml0KSA9PSBmYWxzZSB7XG4gICAgICBAd2FybiAnJGJhc2UtdW5pdCBpcyBub3Qgc2V0LCBwbGVhc2Ugc2V0IHRoaXMgdmFyaWFibGUgaW4geW91ciBjb25maWcuIERlZmF1bHRpbmcgdG8gMS41cmVtJztcbiAgICAgICRiYXNlLXVuaXQ6IDEuNXJlbTtcbiAgICB9IEBlbHNlIHtcbiAgICAgIG1hcmdpbi1ib3R0b206ICRiYXNlLXVuaXQ7XG4gICAgfVxuICB9IEBlbHNlIHtcbiAgICBAZWFjaCAkcG9zaXRpb24ta2V5LCAkcG9zaXRpb24tdmFsdWUgaW4gJHNwYWNpbmctYXJncyB7XG4gICAgICBAaWYgbm90ICRwb3NpdGlvbi12YWx1ZSB7XG4gICAgICAgIEB3YXJuICdZb3Ugc2hvdWxkIHByb3ZpZGUgYSBsaXN0IG9mIHNpZGUvdmFsdWUgcGFpcnMgZS5nLiBcImIgMlwiIGZvciB0aGlzIG1peGluIHRvIHdvcmsnO1xuICAgICAgfSBAZWxzZSBpZiAkcG9zaXRpb24ta2V5ID09ICdhJyB7XG4gICAgICAgIG1hcmdpbjogcGFyc2UtdW5pdCgkcG9zaXRpb24tdmFsdWUpO1xuICAgICAgfSBAZWxzZSBpZiAkcG9zaXRpb24ta2V5ID09ICd2JyB7XG4gICAgICAgIG1hcmdpbi10b3A6IHBhcnNlLXVuaXQoJHBvc2l0aW9uLXZhbHVlKTtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogcGFyc2UtdW5pdCgkcG9zaXRpb24tdmFsdWUpO1xuICAgICAgfSBAZWxzZSBpZiAkcG9zaXRpb24ta2V5ID09ICdoJyB7XG4gICAgICAgIG1hcmdpbi1yaWdodDogcGFyc2UtdW5pdCgkcG9zaXRpb24tdmFsdWUpO1xuICAgICAgICBtYXJnaW4tbGVmdDogcGFyc2UtdW5pdCgkcG9zaXRpb24tdmFsdWUpO1xuICAgICAgfSBAZWxzZSB7XG4gICAgICAgICRzaWRlOiBwb3NpdGlvbi1tYXAoJHBvc2l0aW9uLWtleSk7XG4gICAgICAgICR2YWx1ZTogcGFyc2UtdW5pdCgkcG9zaXRpb24tdmFsdWUpO1xuICAgICAgICBtYXJnaW4tI3skc2lkZX06ICR2YWx1ZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuLy8gdGhpcyBwYWRkaW5nIG1peGluIGZvciBwYWRkaW5nIGJlaGF2ZXMgc2xpZ2h0bHkgZGlmZmVyZW50XG4vLyB3aGVuIHByb3ZpZGVkIHdpdGggbm8gcGFyYW1ldGVyLCBwYWRkaW5nIGlzIGFwcGxpZWQgdG8gYWxsIGZvdXJcbi8vIHNpZGVzIG9mIHRoZSBlbGVtZW50LCB1c2luZyBwYWRkaW5nLXNob3J0aGFuZFxuQG1peGluIHBhZGRpbmcoJHNwYWNpbmctYXJncy4uLikge1xuICAvLyBkZWZhdWx0IGNhc2UgZm9yIHNwYWNpbmcgLS0gbWFyZ2luIGJvdHRvbVxuICBAaWYgbGVuZ3RoKCRzcGFjaW5nLWFyZ3MpID09IDAge1xuICAgIEBpZiB2YXJpYWJsZS1leGlzdHMoYmFzZS11bml0KSA9PSBmYWxzZSB7XG4gICAgICBAd2FybiAnJGJhc2UtdW5pdCBpcyBub3Qgc2V0LCBwbGVhc2Ugc2V0IHRoaXMgdmFyaWFibGUgaW4geW91ciBjb25maWcuIERlZmF1bHRpbmcgdG8gMS41cmVtJztcbiAgICAgICRiYXNlLXVuaXQ6IDEuNXJlbTtcbiAgICB9IEBlbHNlIHtcbiAgICAgIHBhZGRpbmc6ICRiYXNlLXVuaXQ7XG4gICAgfVxuICB9IEBlbHNlIHtcbiAgICBAZWFjaCAkcG9zaXRpb24ta2V5LCAkcG9zaXRpb24tdmFsdWUgaW4gJHNwYWNpbmctYXJncyB7XG4gICAgICBAaWYgbm90ICRwb3NpdGlvbi12YWx1ZSB7XG4gICAgICAgIEB3YXJuICdZb3Ugc2hvdWxkIHByb3ZpZGUgYSBsaXN0IG9mIHNpZGUvdmFsdWUgcGFpcnMgZS5nLiBcImIgMlwiIGZvciB0aGlzIG1peGluIHRvIHdvcmsnO1xuICAgICAgfSBAZWxzZSBpZiAkcG9zaXRpb24ta2V5ID09ICdhJyB7XG4gICAgICAgIHBhZGRpbmc6IHBhcnNlLXVuaXQoJHBvc2l0aW9uLXZhbHVlKTtcbiAgICAgIH0gQGVsc2UgaWYgJHBvc2l0aW9uLWtleSA9PSAndicge1xuICAgICAgICBwYWRkaW5nLXRvcDogcGFyc2UtdW5pdCgkcG9zaXRpb24tdmFsdWUpO1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogcGFyc2UtdW5pdCgkcG9zaXRpb24tdmFsdWUpO1xuICAgICAgfSBAZWxzZSBpZiAkcG9zaXRpb24ta2V5ID09ICdoJyB7XG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IHBhcnNlLXVuaXQoJHBvc2l0aW9uLXZhbHVlKTtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiBwYXJzZS11bml0KCRwb3NpdGlvbi12YWx1ZSk7XG4gICAgICB9IEBlbHNlIHtcbiAgICAgICAgJHNpZGU6IHBvc2l0aW9uLW1hcCgkcG9zaXRpb24ta2V5KTtcbiAgICAgICAgJHZhbHVlOiBwYXJzZS11bml0KCRwb3NpdGlvbi12YWx1ZSk7XG4gICAgICAgIHBhZGRpbmctI3skc2lkZX06ICR2YWx1ZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuIiwiLy8gZ2VuZXJhbCBoZWxwZXIgZnVuY3Rpb25zXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbkBmdW5jdGlvbiBweC10by1yZW0oJHB4dmFsdWUpIHtcbiAgQGlmIHZhcmlhYmxlLWV4aXN0cyhmb250LXNpemVzKSA9PSBmYWxzZSB7XG4gICAgQHdhcm4gJyRmb250LXNpemVzIFNhc3MtbWFwIGRvZXMgbm90IGV4aXN0LCBwbGVhc2UgcHJvdmlkZSBvbmUgaW4geW91ciBjb25maWcuIERlZmF1bHRpbmcgdG8gMTZweC1yZW0tZXF1aXZhbGVudCc7XG4gICAgQHJldHVybiAoJHB4dmFsdWUgLyAxNnB4KSAqIDFyZW07XG4gIH0gQGVsc2UgaWYgbWFwLWhhcy1rZXkoJGZvbnQtc2l6ZXMsIGRlZmF1bHQpID09IGZhbHNlIHtcbiAgICBAd2FybiAnSW5kZXggXCJkZWZhdWx0XCIgbm90IGZvdW5kIGluICRmb250LXNpemVzIFNhc3MtbWFwIHVzaW5nIGZ1bmN0aW9uIHB4LXRvLXJlbS4gRGVmYXVsdGluZyB0byAxNnB4LXJlbS1lcXVpdmFsZW50JztcbiAgICBAcmV0dXJuICgkcHh2YWx1ZSAvIDE2cHgpICogMXJlbTtcbiAgfVxuXG4gIEByZXR1cm4gKCRweHZhbHVlIC8gbWFwLWdldCgkZm9udC1zaXplcywgZGVmYXVsdCkpICogMXJlbTtcbn1cblxuLy8gcmV0dXJucyB0cnVlIGlmIGl0IGlzIGp1c3QgYSBudW1iZXIgd2l0aG91dCB1bml0XG5AZnVuY3Rpb24gaXMtbnVtYmVyKCR2YWx1ZSkge1xuICBAcmV0dXJuIHR5cGUtb2YoJHZhbHVlKSA9PSAnbnVtYmVyJyBhbmQgdW5pdGxlc3MoJHZhbHVlKTtcbn1cblxuLy8gaWYgYSB1bml0bGVzcyBudW1iZXIgaXMgZ2l2ZW4sIHRoaXMgZnVuY3Rpb24gcmV0dXJucyAkYmFzZS11bml0ICogdmFsdWVcbi8vIChleGNlcHQgZm9yIDAsIDAgd2lsbCBiZSByZXR1cm5lZCBpbnN0YW50bHkpXG4vLyBpZiBhbnl0aGluZyBlbHNlIGlzIGdpdmVuLCBpdCB3aWxsIHJldHVybiBpdHMgdW5xb3RlZCB2YWx1ZTtcbkBmdW5jdGlvbiBwYXJzZS11bml0KCR2YWx1ZSkge1xuICBAaWYgJHZhbHVlID09IDAge1xuICAgIEByZXR1cm4gMDtcbiAgfVxuXG4gIEBpZiBpcy1udW1iZXIoJHZhbHVlKSB7XG4gICAgQGlmIHZhcmlhYmxlLWV4aXN0cyhiYXNlLXVuaXQpID09IGZhbHNlIHtcbiAgICAgIEB3YXJuICckYmFzZS11bml0IGlzIG5vdCBzZXQsIHBsZWFzZSBzZXQgdGhpcyB2YXJpYWJsZSBpbiB5b3VyIGNvbmZpZy4gRGVmYXVsdGluZyB0byAxLjVyZW0nO1xuICAgICAgJGJhc2UtdW5pdDogMS41cmVtO1xuICAgIH0gQGVsc2Uge1xuICAgICAgQHJldHVybiAkYmFzZS11bml0ICogJHZhbHVlO1xuICAgIH1cbiAgfVxuXG4gIEByZXR1cm4gJHZhbHVlO1xufVxuXG4vLyByZXR1cm5zIHRoZSBmdWxsIHZhbHVlIGZvciBhbnkgb2YgdGhlIHBvc2l0aW9uL3NpZGUgc2hvcnQtZm9ybXNcbkBmdW5jdGlvbiBwb3NpdGlvbi1tYXAoJHNob3J0KSB7XG4gICRzaG9ydC1tYXA6IChcbiAgICB0OiB0b3AsXG4gICAgcjogcmlnaHQsXG4gICAgYjogYm90dG9tLFxuICAgIGw6IGxlZnRcbiAgKTtcblxuICBAaWYgbWFwLWhhcy1rZXkoJHNob3J0LW1hcCwgJHNob3J0KSB7XG4gICAgQHJldHVybiBtYXAtZ2V0KCRzaG9ydC1tYXAsICRzaG9ydCk7XG4gIH0gQGVsc2Uge1xuICAgIEB3YXJuICdTaG9ydCBrZXkgXCIjeyRzaG9ydH1cIiBub3QgYXZhaWFibGUuIEF2YWlhYmxlIGtleXMgYXJlOiB0LCByLCBiIGFuZCBsJztcblxuICAgIEByZXR1cm4gZmFsc2U7XG4gIH1cbn1cbiIsImgxIHtcbiAgQGluY2x1ZGUgei1pbmRleChmZWV0KTtcbiAgQGluY2x1ZGUgZm9udC1zaXplKGgxKTtcbiAgQGluY2x1ZGUgbWFyZ2luKGEgMCwgYiAxKTtcbn1cblxuaDIge1xuICBAaW5jbHVkZSBmb250LXNpemUoaDIpO1xuICBAaW5jbHVkZSBtYXJnaW4oYSAwLCBiIDEpO1xufVxuXG5oMyB7XG4gIEBpbmNsdWRlIGZvbnQtc2l6ZShoMyk7XG4gIEBpbmNsdWRlIG1hcmdpbihhIDAsIGIgMSk7XG59XG5cbmg0IHtcbiAgQGluY2x1ZGUgZm9udC1zaXplKGg0KTtcbiAgQGluY2x1ZGUgbWFyZ2luKGEgMCwgYiAxKTtcbn1cblxuaDUge1xuICBAaW5jbHVkZSBmb250LXNpemUoaDUpO1xuICBAaW5jbHVkZSBtYXJnaW4oYSAwLCBiIDEpO1xufVxuXG5oNiB7XG4gIEBpbmNsdWRlIGZvbnQtc2l6ZShoNik7XG4gIEBpbmNsdWRlIG1hcmdpbihhIDAsIGIgMSk7XG59XG4iLCIvLyB6LWluZGV4IG1peGluIGZvciB1c2Ugd2l0aCB0aGUgbWFwIGluIHZhcmlhYmxlc1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLyBwcm92aWRlIGEgZGVmYXVsdCBtYXAgZm9yIHotaW5kZXhlcyB1c2VkIHRocm91Z2hvdXQgdGhlIHByb2plY3Rcbi8vIHdpdGggYW4gZWFzeSB0byByZW1lbWJlciBzdGFja2luZyBoaWVyYXJjaHkg4oCUwqBqdXN0IGxvb2sgZG93biB5b3VyIGJvZHkhXG4vLyBJZiB5b3Ugd2FudCB0byB1c2UgeW91ciBvd24gbWFwLCBqdXN0IHByb3ZpZGUgb25lIHdpdGggdGhlIHZhcmlhYmxlICR6LWluZGV4ZXNcbi8vIGJlZm9yZSBpbmNsdWRpbmcgdGhpcyBmaWxlIGluIHlvdXIgbWFpbiBTYXNzIGZpbGVcbiR6LWluZGV4ZXM6IChcbiAgc2t5OiAxMDAwLFxuICBoYWlyOiA1MCxcbiAgaGVhZDogNDAsXG4gIGJyZWFzdDogMzAsXG4gIGJlbGx5OiAyMCxcbiAga25lZXM6IDEwLFxuICBmZWV0OiAxLFxuICBkZWZhdWx0OiAwLFxuICBncm91bmQ6IC0xXG4pICFkZWZhdWx0O1xuXG4vLyBhbmQgYW4gZWFzeSB0byB1c2UgbWl4aW4gdG8gdXNlIGEgdmFsdWUgZnJvbSB0aGUgbWFwIGFib3ZlIHVzZSBsaWtlIHRoaXM6XG4vLyBAaW5jbHVkZSB6LWluZGV4KGtuZWVzKTsgPT0+IHotaW5kZXg6IDEwO1xuXG5AbWl4aW4gei1pbmRleCgkei12YWx1ZTogZGVmYXVsdCkge1xuICB6LWluZGV4OiB6LWluZGV4KCR6LXZhbHVlKTtcbn1cblxuLy8gYW5kIGlmIG5lZWRlZCBhIGZ1bmN0aW9uIHRvIGdldCB0aGUgdmFsdWUgZnJvbSB0aGUgbWFwIHdpdGgsXG4vLyB0aGlzIGlzIGJhc2ljYWxseSBqdXN0IGFuIGFsaWFzIGZvciBtYXAtZ2V0KCR6LWluZGV4ZXMuLi4pXG5AZnVuY3Rpb24gei1pbmRleCgkei12YWx1ZTogZGVmYXVsdCkge1xuICBAaWYgbWFwLWhhcy1rZXkoJHotaW5kZXhlcywgJHotdmFsdWUpID09IGZhbHNlIHtcbiAgICBAd2FybiAnSW5kZXggXCIjeyR6LXZhbHVlfVwiIG5vdCBmb3VuZCBpbiAkei1pbmRleGVzIFNhc3MtbWFwIHVzaW5nIG1peGluIHotaW5kZXguIERlZmF1bHRpbmcgdG8gMCc7XG4gICAgQHJldHVybiAwO1xuICB9XG5cbiAgQHJldHVybiBtYXAtZ2V0KCR6LWluZGV4ZXMsICR6LXZhbHVlKTtcbn1cbiIsIi8vIGZ1bmN0aW9uIHRvIGVhc2lseSBnZXQgdGhlIGZvbnQtc2l6ZSBhbmQgY29udmVydCBpdCB0byByZW1cbkBmdW5jdGlvbiBmb250LXNpemUoJGZvbnRzaXplLXZhbHVlOiBkZWZhdWx0KSB7XG4gIEBpZiB2YXJpYWJsZS1leGlzdHMoZm9udC1zaXplcykgPT0gZmFsc2Uge1xuICAgIEB3YXJuICckZm9udC1zaXplcyBTYXNzLW1hcCBkb2VzIG5vdCBleGlzdCwgcGxlYXNlIHByb3ZpZGUgb25lIGluIHlvdXIgY29uZmlnLiBEZWZhdWx0aW5nIHRvIDE2cHgnO1xuICAgIEByZXR1cm4gcHgtdG8tcmVtKDE2cHgpO1xuICB9IEBlbHNlIGlmIG1hcC1oYXMta2V5KCRmb250LXNpemVzLCAkZm9udHNpemUtdmFsdWUpID09IGZhbHNlIHtcbiAgICBAd2FybiAnSW5kZXggXCIjeyRmb250c2l6ZS12YWx1ZX1cIiBub3QgZm91bmQgaW4gJGZvbnQtc2l6ZXMgU2Fzcy1tYXAgdXNpbmcgZnVuY3Rpb24gZm9udC1zaXplLiBEZWZhdWx0aW5nIHRvIDE2cHgnO1xuICAgIEByZXR1cm4gcHgtdG8tcmVtKDE2cHgpO1xuICB9XG5cbiAgQHJldHVybiBweC10by1yZW0obWFwLWdldCgkZm9udC1zaXplcywgJGZvbnRzaXplLXZhbHVlKSk7XG59XG5cbi8vIGZvbnQtc2l6ZSBtaXhpbiB1c2luZyB0aGUgZnVuY3Rpb24gYWJvdmVcbkBtaXhpbiBmb250LXNpemUoJGZvbnRzaXplLXZhbHVlOiBkZWZhdWx0KSB7XG4gIGZvbnQtc2l6ZTogZm9udC1zaXplKCRmb250c2l6ZS12YWx1ZSk7XG59XG5cbi8vIG1peGlucyBmb3IgZm9udC1mYWNlLCBmb3IgdXNhZ2Ugd2l0aCBmb250ZmFjZW9ic2VydmVyXG5AbWl4aW4gZm9udC1mYW1pbHkoJGZhbWlseS12YWx1ZTogZGVmYXVsdCkge1xuICAkZmFsbGJhY2s6IG51bGw7XG4gICRmb250OiBudWxsO1xuXG4gIEBpZiB2YXJpYWJsZS1leGlzdHMoZm9udHMpID09IGZhbHNlIHtcbiAgICBAd2FybiAnJGZvbnRzIFNhc3MtbWFwIGRvZXMgbm90IGV4aXN0LCBwbGVhc2UgcHJvdmlkZSBvbmUgaW4geW91ciBjb25maWcuIERlZmF1bHRpbmcgdG8gc2Fucy1zZXJmJztcbiAgICAkZmFsbGJhY2s6IHNhbnMtc2VyaWY7XG4gICAgJGZvbnQ6IHNhbnMtc2VyaWY7XG4gIH0gQGVsc2UgaWYgbWFwLWhhcy1rZXkoJGZvbnRzLCAkZmFtaWx5LXZhbHVlKSA9PSBmYWxzZSB7XG4gICAgQHdhcm4gJ0luZGV4IFwiI3skZmFtaWx5LXZhbHVlfVwiIG5vdCBmb3VuZCBpbiAkZm9udHMgU2FzcyBtYXAgdXNpbmcgbWl4aW4gZm9udC1mYW1pbHkuIERlZmF1bHRpbmcgdG8gc2Fucy1zZXJpZic7XG4gICAgJGZhbGxiYWNrOiBzYW5zLXNlcmlmO1xuICAgICRmb250OiBzYW5zLXNlcmlmO1xuICB9IEBlbHNlIHtcbiAgICAkZmFsbGJhY2s6IHVucXVvdGUobWFwLWdldChtYXAtZ2V0KCRmb250cywgJGZhbWlseS12YWx1ZSksIGZhbGxiYWNrKSk7XG4gICAgJGZvbnQ6IG1hcC1nZXQobWFwLWdldCgkZm9udHMsICRmYW1pbHktdmFsdWUpLCBmYW1pbHkpLCAkZmFsbGJhY2s7XG4gIH1cblxuICAvLyBub3cgdGhhdCB3ZSBoYXZlIHRoZSBmb250IGFuZCBmYWxsYmFjaywgaWYgd2UgdXNlXG4gIC8vIGZvbnQtZmFjZSwgYWRkIHRoZSBmb250cy1sb2FkZWQgY2xhc3MsIGlmIG5vdCwganVzdCB1c2UgYWxsXG4gIEBpZiBtYXAtZ2V0KG1hcC1nZXQoJGZvbnRzLCAkZmFtaWx5LXZhbHVlKSwgZm9udGZhY2UpID09IHRydWUge1xuICAgIGZvbnQtZmFtaWx5OiAkZmFsbGJhY2s7XG5cbiAgICAuZm9udHMtbG9hZGVkICYge1xuICAgICAgZm9udC1mYW1pbHk6ICRmb250O1xuICAgIH1cbiAgfSBAZWxzZSB7XG4gICAgZm9udC1mYW1pbHk6ICRmb250O1xuICB9XG59XG5cbi8vIG1peGluIGZvciBmb250LXdlaWdodFxuQG1peGluIGZvbnQtd2VpZ2h0KCRmYW1pbHktdmFsdWU6IGRlZmF1bHQpIHtcbiAgJHRoaXMtZm9udC13ZWlnaHQ6IDQwMDtcblxuICBAaWYgdmFyaWFibGUtZXhpc3RzKGZvbnRzKSA9PSBmYWxzZSB7XG4gICAgQHdhcm4gJyRmb250cyBTYXNzLW1hcCBkb2VzIG5vdCBleGlzdCwgcGxlYXNlIHByb3ZpZGUgb25lIGluIHlvdXIgY29uZmlnLiBEZWZhdWx0aW5nIHRvIDQwMCc7XG4gIH0gQGVsc2UgaWYgbWFwLWhhcy1rZXkoJGZvbnRzLCAkZmFtaWx5LXZhbHVlKSA9PSBmYWxzZSB7XG4gICAgQHdhcm4gJ0luZGV4IFwiI3skZmFtaWx5LXZhbHVlfVwiIG5vdCBmb3VuZCBpbiAkZm9udHMgU2FzcyBtYXAgdXNpbmcgbWl4aW4gZm9udC13ZWlnaHQuIERlZmF1bHRpbmcgdG8gNDAwJztcbiAgfSBAZWxzZSB7XG4gICAgJHRoaXMtZm9udC13ZWlnaHQ6IG1hcC1nZXQobWFwLWdldCgkZm9udHMsICRmYW1pbHktdmFsdWUpLCB3ZWlnaHQpO1xuICB9XG5cbiAgZm9udC13ZWlnaHQ6ICR0aGlzLWZvbnQtd2VpZ2h0O1xufVxuXG4vLyBtaXhpbiBmb3IgZm9udC1zdHlsZVxuQG1peGluIGZvbnQtc3R5bGUoJGZhbWlseS12YWx1ZTogZGVmYXVsdCkge1xuICAkdGhpcy1mb250LXN0eWxlOiBub3JtYWw7XG5cbiAgQGlmIHZhcmlhYmxlLWV4aXN0cyhmb250cykgPT0gZmFsc2Uge1xuICAgIEB3YXJuICckZm9udHMgU2Fzcy1tYXAgZG9lcyBub3QgZXhpc3QsIHBsZWFzZSBwcm92aWRlIG9uZSBpbiB5b3VyIGNvbmZpZy4gRGVmYXVsdGluZyB0byBub3JtYWwnO1xuICB9IEBlbHNlIGlmIG1hcC1oYXMta2V5KCRmb250cywgJGZhbWlseS12YWx1ZSkgPT0gZmFsc2Uge1xuICAgIEB3YXJuICdJbmRleCBcIiN7JGZhbWlseS12YWx1ZX1cIiBub3QgZm91bmQgaW4gJGZvbnRzIFNhc3MgbWFwIHVzaW5nIG1peGluIGZvbnQtc3R5bGUuIERlZmF1bHRpbmcgdG8gbm9ybWFsJztcbiAgfSBAZWxzZSB7XG4gICAgJHRoaXMtZm9udC1zdHlsZTogdW5xdW90ZShtYXAtZ2V0KG1hcC1nZXQoJGZvbnRzLCAkZmFtaWx5LXZhbHVlKSwgc3R5bGUpKTtcbiAgfVxuXG4gIGZvbnQtc3R5bGU6ICR0aGlzLWZvbnQtc3R5bGU7XG59XG5cbi8vIG5vdyBhbGwgdG9nZXRoZXIsIGZvbnQtc2hvcnRoYW5kIG1peGluXG5AbWl4aW4gZm9udCgkZmFtaWx5LXZhbHVlOiBkZWZhdWx0KSB7XG4gIEBpbmNsdWRlIGZvbnQtZmFtaWx5KCRmYW1pbHktdmFsdWUpO1xuICBAaW5jbHVkZSBmb250LXdlaWdodCgkZmFtaWx5LXZhbHVlKTtcbiAgQGluY2x1ZGUgZm9udC1zdHlsZSgkZmFtaWx5LXZhbHVlKTtcbn1cbiIsImEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG5cbiAgQGluY2x1ZGUgYXR0ZW50aW9uIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgfVxufVxuIiwiLy8gYXR0ZW50aW9uIG1peGluIGZvciBob3Zlci0sIGZvY3VzLSBhbmQgYWN0aXZlLXN0YXRlc1xuQG1peGluIGF0dGVudGlvbiB7XG4gICY6aG92ZXIsXG4gICY6YWN0aXZlLFxuICAmOmZvY3VzIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuIiwidWwsXG5kbCxcbm9sIHtcbiAgQGluY2x1ZGUgbWFyZ2luKGEgMCwgYiAxKTtcbiAgQGluY2x1ZGUgcGFkZGluZyhhIDAsIGwgMSk7XG5cbiAgJiAmIHsgLy8gbm8gbWFyZ2luIGZvciBzdWJsaXN0c1xuICAgIEBpbmNsdWRlIG1hcmdpbihiIDApO1xuICB9XG59XG5cbi8vIG5ldmVyIGV2ZXIgc2hvdyBsaXN0cyBpbiBuYXZpZ2F0aW9uIG9yIGZpZWxkc2V0cyBibG9ja3MgYXMgbGlzdHNcbm5hdixcbmZpZWxkc2V0IHtcbiAgdWwsXG4gIG9sIHtcbiAgICBAaW5jbHVkZSBwYWRkaW5nKGEgMCk7XG4gICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgfVxufVxuXG4iLCIvLyBSZW1vdmUgdGhlIGdhcCBiZXR3ZWVuIG1lZGlhIGVsZW1lbnRzIHN1Y2ggYXMgYXVkaW8sIGltYWdlcywgdmlkZW9zIGV0Yy5cbi8vIGFuZCB0aGUgYm90dG9tIG9mIHRoZWlyIGNvbnRhaW5lcnNcbmF1ZGlvLFxuY2FudmFzLFxuaWZyYW1lLFxuaW1nLFxuc3ZnLFxudmlkZW8ge1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xufVxuXG4vLyBtYWtlIHVzZXIgY29udGVudCBtZWRpYSBlbGVtZW50cyByZXNwb25zaXZlIChtYXgtd2lkdGgpXG5hdWRpbyxcbmlmcmFtZSxcbmltZyxcbnZpZGVvIHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbmZpZ3VyZSB7XG4gIEBpbmNsdWRlIG1hcmdpbihhIDAsIGIgMSk7XG59XG4iLCI6cm9vdCB7XG4gIEBpbmNsdWRlIGNvbG9yKGRlZmF1bHQpO1xuICBAaW5jbHVkZSBiYWNrZ3JvdW5kLWNvbG9yKGJhY2tncm91bmQpO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvLyBzYW5lIGJveC1zaXppbmcgZXZlcnl3aGVyZVxuICBmb250LXNpemU6ICRiYXNlLWZvbnQtc2l6ZTsgLy8gYXMgcmVmZXJlbmNlIGZvciByZW1cbiAgZm9udC1rZXJuaW5nOiBub3JtYWw7XG4gIGZvbnQtdmFyaWFudC1saWdhdHVyZXM6IGNvbW1vbi1saWdhdHVyZXMgY29udGV4dHVhbDtcbiAgZm9udC1mZWF0dXJlLXNldHRpbmdzOiAna2VybicsICdsaWdhJywgJ2NsaWcnLCAnY2FsdCc7XG4gIGxpbmUtaGVpZ2h0OiAkYmFzZS1saW5lLWhlaWdodDtcbiAgdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbn1cblxuKiB7XG4gICYsXG4gICY6OmJlZm9yZSxcbiAgJjo6YWZ0ZXIge1xuICAgIGJveC1zaXppbmc6IGluaGVyaXQ7XG4gIH1cbn1cblxuXG5ib2R5IHtcbiAgQGluY2x1ZGUgZm9udChkZWZhdWx0KTtcbiAgQGluY2x1ZGUgYmFja2dyb3VuZC1jb2xvcihiYWNrZ3JvdW5kKTtcblxuICAvLyByZW1vdmUgdGhpcyBpZiB5b3Ugd2FudCBjdXN0b20gcHJpbnQtc3R5bGVzXG4gIEBpbmNsdWRlIG1lZGlhcXVlcnkocHJpbnQpIHtcbiAgICAqIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxuXG4gICAgJjo6YWZ0ZXIge1xuICAgICAgY29udGVudDogJ1BsZWFzZSwgZG8gbm90IHdhc3RlIHBhcGVyIGJ5IHByaW50aW5nIHdlYnBhZ2VzLic7XG4gICAgfVxuICB9XG59XG5cbi8vIHRleHQgc2VsZWN0aW9uIHN0eWxlc1xuOjpzZWxlY3Rpb24ge1xuICBAaW5jbHVkZSBiYWNrZ3JvdW5kLWNvbG9yKG1haW4pO1xuICBAaW5jbHVkZSBjb2xvcihpbnZlcnRlZCk7XG4gIHRleHQtc2hhZG93OiBub25lO1xufVxuIiwiLy8gYSBmdW5jdGlvbiB0byBlYXNpbHkgZ2V0IHRoZSBjb2xvciB2YWx1ZSBvZiB0aGUgY29sb3JzLW1hcFxuQGZ1bmN0aW9uIGNvbG9yKCRjb2xvci12YWx1ZTogZGVmYXVsdCkge1xuICBAaWYgdmFyaWFibGUtZXhpc3RzKGNvbG9ycykgPT0gZmFsc2Uge1xuICAgIEB3YXJuICckY29sb3JzIFNhc3MtbWFwIGRvZXMgbm90IGV4aXN0LCBwbGVhc2UgcHJvdmlkZSBvbmUgaW4geW91ciBjb25maWcuIERlZmF1bHRpbmcgdG8gcmVkJztcbiAgICBAcmV0dXJuICNmMDA7XG4gIH0gQGVsc2UgaWYgbWFwLWhhcy1rZXkoJGNvbG9ycywgJGNvbG9yLXZhbHVlKSA9PSBmYWxzZSB7XG4gICAgQHdhcm4gJ0luZGV4IFwiI3skY29sb3ItdmFsdWV9XCIgbm90IGZvdW5kIGluICRjb2xvcnMgU2Fzcy1tYXAgdXNpbmcgZnVuY3Rpb24gY29sb3IuIERlZmF1bHRpbmcgdG8gcmVkJztcbiAgICBAcmV0dXJuICNmMDA7XG4gIH1cblxuICBAcmV0dXJuIG1hcC1nZXQoJGNvbG9ycywgJGNvbG9yLXZhbHVlKTtcbn1cblxuLy8gbWl4aW5zIHVzaW5nIHRoZSBmdW5jdGlvbiBhYm92ZVxuQG1peGluIGNvbG9yKCRjb2xvci12YWx1ZTogZGVmYXVsdCkge1xuICBjb2xvcjogY29sb3IoJGNvbG9yLXZhbHVlKTtcbn1cblxuQG1peGluIGJhY2tncm91bmQtY29sb3IoJGNvbG9yLXZhbHVlOiBkZWZhdWx0KSB7XG4gIGJhY2tncm91bmQtY29sb3I6IGNvbG9yKCRjb2xvci12YWx1ZSk7XG59XG5cbkBtaXhpbiBib3JkZXItY29sb3IoJGNvbG9yLXZhbHVlOiBkZWZhdWx0KSB7XG4gIGJvcmRlci1jb2xvcjogY29sb3IoJGNvbG9yLXZhbHVlKTtcbn1cblxuQG1peGluIGZpbGwoJGNvbG9yLXZhbHVlOiBkZWZhdWx0KSB7XG4gIGZpbGw6IGNvbG9yKCRjb2xvci12YWx1ZSk7XG59XG4iLCIvLyBkZWZpbmUgeW91ciBjb2xvcnMgaGVyZSwgYW5kIGZlZWwgZnJlZSB0byB1c2UgJ3JlYWwnIG5hbWVzLCBqdXN0XG4vLyBsaWtlIGJlbG93IC0tPiBjb2xvci1yZWQ6ICNmZmY7IGJ1dCBuZXZlciB1c2UgdGhvc2UgY29sb3JzIGluIHlvdXJcbi8vIHByb2plY3QsIG9ubHkgdXNlIHRoZSBtYXAgKyBtaXhpbnMsIHdoZXJlIHlvdSBhc3NpbmcgdGhlIGNvbG9ycyBpblxuXG4kY29sb3ItYmxhY2s6ICMwMDA7XG4kY29sb3Itd2hpdGU6ICNmZmY7XG4kY29sb3ItcmVkOiAjZjc4NDc0O1xuXG4kY29sb3JzOiAoXG4gIGRlZmF1bHQ6ICRjb2xvci1ibGFjayxcbiAgbWFpbjogJGNvbG9yLXJlZCxcbiAgZXJyb3I6ICRjb2xvci1yZWQsXG4gIGludmVydGVkOiAkY29sb3Itd2hpdGUsXG4gIGJvcmRlcjogJGNvbG9yLWJsYWNrLFxuICBiYWNrZ3JvdW5kOiAkY29sb3Itd2hpdGVcbik7XG4iLCIvLyBiYXNlIHVuaXQgZGVmaW5pdGlvbiBhbmQgd2lkdGgvaGVpZ2h0cyBmb3Igb3RoZXIgc3R1ZmZcbiRiYXNlLWZvbnQtc2l6ZTogMTZweDtcbiRiYXNlLWxpbmUtaGVpZ2h0OiAxLjU7XG5cbiRiYXNlLXVuaXQ6IDFyZW0gKiAkYmFzZS1saW5lLWhlaWdodDtcbiRiYXNlLWhhbGY6ICRiYXNlLXVuaXQgLyAyO1xuJGJhc2UtdGhpcmQ6ICRiYXNlLXVuaXQgLyAzO1xuJGJhc2UtcXVhcnQ6ICRiYXNlLXVuaXQgLyA0O1xuJGJhc2UtZG91YmxlOiAkYmFzZS11bml0ICogMjtcbiRiYXNlLXRyaXBsZTogJGJhc2UtdW5pdCAqIDM7XG4kYmFzZS1xdWFkOiAkYmFzZS11bml0ICogNDtcbiIsIi8vIGEgc21hbGwgaGVscGVyIGZvciBlYXNpZXIgbWVkaWFxdWVyaWVzIC0ganVzdCBkZWZpbmUgdGhlXG4vLyBicmVha3BvaW50cyBpbiB5b3VyIGNvbmZpZyBhcyBhIG1hcCBhbmQgeW91IGFyZSByZWFkeSB0byBnb1xuLy8gYnkgZGVmYXVsdCB3ZSB1c2UgdGhlIG1vYmlsZS1maXJzdCBpZGVhLCBubyBtcSA9PSBtb2JpbGVcbi8vIHlvdSBjYW4gc2V0IHRoZSBzZWNvbmQgcGFyYW1ldGVyIHRvIHRydWUgYW4gcHJvdmlkZSBhIGN1c3RvbSBtZWRpYXF1ZXJ5XG5AbWl4aW4gbWVkaWFxdWVyeSgkYnJlYWtwb2ludC12YWx1ZSwgJGN1c3RvbS1xdWVyeTogZmFsc2UpIHtcbiAgQGlmICRicmVha3BvaW50LXZhbHVlID09IHByaW50IHsgLy8gcHJpbnQgc3R5bGVzXG4gICAgQG1lZGlhIHByaW50IHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfSBAZWxzZSBpZiAkYnJlYWtwb2ludC12YWx1ZSA9PSBsYW5kc2NhcGUgeyAvLyBsYW5kc2NhcGUgYW5kIHBvcnRyYWl0IG1lZGlhcXVlcmllc1xuICAgIEBtZWRpYSAob3JpZW50YXRpb246IGxhbmRzY2FwZSkge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9IEBlbHNlIGlmICRicmVha3BvaW50LXZhbHVlID09IHBvcnRyYWl0IHtcbiAgICBAbWVkaWEgKG9yaWVudGF0aW9uOiBwb3J0cmFpdCkge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9IEBlbHNlIGlmICRjdXN0b20tcXVlcnkgeyAvLyBjdXN0b20gbWVkaWFxdWVyaWVzXG4gICAgQGlmIHZhcmlhYmxlLWV4aXN0cyhicmVha3BvaW50cykgPT0gZmFsc2Uge1xuICAgICAgQHdhcm4gJyRicmVha3BvaW50cyBTYXNzLW1hcCBkb2VzIG5vdCBleGlzdCwgcGxlYXNlIHByb3ZpZGUgb25lIGluIHlvdXIgY29uZmlnJztcbiAgICB9IEBlbHNlIGlmIG1hcC1oYXMta2V5KCRicmVha3BvaW50cywgJGJyZWFrcG9pbnQtdmFsdWUpID09IGZhbHNlIHtcbiAgICAgIEB3YXJuICdJbmRleCBcIiN7JGJyZWFrcG9pbnQtdmFsdWV9XCIgbm90IGZvdW5kIGluICRicmVha3BvaW50cyBTYXNzLW1hcCB1c2luZyBtaXhpbiBtZWRpYXF1ZXJ5JztcbiAgICB9IEBlbHNlIHtcbiAgICAgIEBtZWRpYSAje21hcC1nZXQoJGJyZWFrcG9pbnRzLCAkYnJlYWtwb2ludC12YWx1ZSl9IHtcbiAgICAgICAgQGNvbnRlbnQ7XG4gICAgICB9XG4gICAgfVxuICB9IEBlbHNlIHsgLy8gZGVmYXVsdDogbW9iaWxlLWZpcnN0IG1lZGlhcXVlcmllcyBhcyBkZWZpbmVkIGluIGJyZWFrcG9pbnRzLCB0aGV5IHdpbGwgYmUgY29udmVydGVkIHRvIGVtXG4gICAgQGlmIHZhcmlhYmxlLWV4aXN0cyhicmVha3BvaW50cykgPT0gZmFsc2Uge1xuICAgICAgQHdhcm4gJyRicmVha3BvaW50cyBTYXNzLW1hcCBkb2VzIG5vdCBleGlzdCwgcGxlYXNlIHByb3ZpZGUgb25lIGluIHlvdXIgY29uZmlnJztcbiAgICB9IEBlbHNlIGlmIG1hcC1oYXMta2V5KCRicmVha3BvaW50cywgJGJyZWFrcG9pbnQtdmFsdWUpID09IGZhbHNlIHtcbiAgICAgIEB3YXJuICdJbmRleCBcIiN7JGJyZWFrcG9pbnQtdmFsdWV9XCIgbm90IGZvdW5kIGluICRicmVha3BvaW50cyBTYXNzLW1hcCB1c2luZyBtaXhpbiBtZWRpYXF1ZXJ5JztcbiAgICB9IEBlbHNlIHtcbiAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAje21hcC1nZXQoJGJyZWFrcG9pbnRzLCAkYnJlYWtwb2ludC12YWx1ZSkgKiAxcHh9KSB7XG4gICAgICAgIEBjb250ZW50O1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIiwiLy8gdXNlIHRoZSBmdWxsIGF2YWlhYmxlIHdpZHRoIGJ5IGRlZmF1bHRqXG50YWJsZSB7XG4gIEBpbmNsdWRlIG1hcmdpbihhIDAsIGIgMSk7XG4gIHdpZHRoOiAxMDAlO1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xufVxuXG4vLyBhbGlnbiBjb250ZW50IGluIHRhYmxlIGNlbGxzIHRvIHRoZSB0b3AgYnkgZGVmYXVsdFxudGQsXG50aCB7XG4gIHBhZGRpbmc6IDA7XG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XG59XG5cbi8vIGFsaWduIGNvbnRlbnQgdG8gdGhlIGxlZnQgZm9yIHRhYmxlIGhlYWRpbmdzXG50aCB7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG59XG5cbiIsIi8vIFRleHQgYW5kIG90aGVyIGlubGluZSBlbGVtZW50c1xuLy8gZGVmYXVsdCBociBpcyBqdXN0IGEgc2luZ2xlIGxpbmUgMXB4IGhpZ2gsIGZlZWwgZnJlZSB0byBvdmVycmlkZVxuaHIge1xuICBAaW5jbHVkZSBtYXJnaW4oaCBhdXRvLCBiIDEsIHQgMCk7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogOTAlO1xuICBib3JkZXI6IDA7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCBjdXJyZW50Q29sb3I7XG59XG5cbnByZSxcbnAge1xuICBAaW5jbHVkZSBtYXJnaW4oYSAwLCBiIDEpO1xufVxuXG5zdWIsXG5zdXAge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xufVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07XG59XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtO1xufVxuIiwiLmJ1dHRvbiB7XG4gIEBpbmNsdWRlIHBhZGRpbmcoYSAxLzIpO1xuICBAaW5jbHVkZSBjb2xvcihkZWZhdWx0KTtcbiAgQGluY2x1ZGUgYmFja2dyb3VuZC1jb2xvcihiYWNrZ3JvdW5kKTtcbiAgYm9yZGVyOiAxcHggc29saWQgY3VycmVudENvbG9yO1xuXG4gIEBpbmNsdWRlIGF0dGVudGlvbiB7XG4gICAgQGluY2x1ZGUgY29sb3IobWFpbik7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyAvLyBmb3IgbGlua3NcbiAgfVxufVxuIiwiLmV4YW1wbGUge1xuICBAaW5jbHVkZSBwYWRkaW5nKGEgMSk7XG4gIGJvcmRlcjogMXB4IHNvbGlkIGN1cnJlbnRDb2xvcjtcbiAgYm94LXNoYWRvdzogMCAwICRiYXNlLXVuaXQgMCBjdXJyZW50Q29sb3I7XG59XG5cbi5leGFtcGxlLS1kZWZhdWx0IHtcbiAgZm9udC1zaXplOiAxMDAlO1xufVxuXG4uZXhhbXBsZS0tbGFyZ2Uge1xuICBAaW5jbHVkZSBwYWRkaW5nKGEgMik7XG4gIGZvbnQtc2l6ZTogMjAwJTtcbn1cbiIsIi8vIHN2ZyBpY29ucyBhbmQgY3VzdG9tIGljb24gc3R5bGVzXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vIGRlZmF1bHQgaWNvbiBzdHlsZXMgLSBpbmxpbmUsIHNhbWUgY29sb3IsIDFlbS8xZW1cbi5pY29uIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0b3A6IC0wLjA2MjVlbTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB3aWR0aDogMWVtO1xuICBoZWlnaHQ6IDFlbTtcbiAgZmlsbDogY3VycmVudENvbG9yO1xufVxuXG4vLyBzZXQgb3RoZXIgaWNvbiBzdHlsZXMgaGVyZSwgZm9yIGV4YW1wbGVcbi5pY29uLS1sb2dvIHtcbiAgQGluY2x1ZGUgZmlsbChtYWluKTtcbiAgd2lkdGg6ICRiYXNlLWRvdWJsZTtcbiAgaGVpZ2h0OiAkYmFzZS1kb3VibGU7XG59XG4iLCIvLyBhIHZlcnkgYmFzaWMgZ3JpZCBzeXN0ZW1cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gdXNlIGxpa2UgdGhpczpcbi8vIDxkaXYgY2xhc3M9XCJncmlkXCI+XG4vLyAgPGRpdiBjbGFzcz1cImdyaWRfX2NvbHVtblwiPiBZb3VyIGNvbnRlbnQgPC9kaXY+XG4vLyAgPGRpdiBjbGFzcz1cImdyaWRfX2NvbHVtblwiPiBZb3VyIGNvbnRlbnQgPC9kaXY+XG4vLyA8L2Rpdj5cblxuLy8gVGhlIGdyaWRzIGJ5IGRlZmF1bHQgdHJ5IHRvIHB1dCBldmVyeXRoaW5nIHN0YWNrZWQgb24gZWFjaCBvdGhlclxuLy8gb24gc2l6ZXMgYmVsb3cgdGhlIGwtYnJlYWtwb2ludCwgYW5kIGNvbHVtbnMgYWZ0ZXIgdGhhdFxuLy8geW91IGNhbiB0aHJvdyBncmlkcyBpbnRvIGVhY2ggb3RoZXIgdG8gY3JlYXRlIGN1c3RvbSBsYXlvdXRzXG5cbi5ncmlkIHtcbiAgQGluY2x1ZGUgbWFyZ2luKGwgLTEpO1xuICBAaW5jbHVkZSBwYWRkaW5nKGEgMCk7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBsaXN0LXN0eWxlOiBub25lOyAvLyBpZiBhcHBsaWVkIG9uIGEgbGlzdCwgcmVtb3ZlIGxpc3Qtc3R5bGVzXG5cbiAgLy8gdHJ5IHRvIGZpdCBldmVyeXRoaW5nIGludG8gYSByb3cgb24gbGFyZ2VyIGRpc3BsYXlzLCBpblxuICAvLyBlZmZlY3QgbWFraW5nIGNvbHVtbnMgb3V0IG9mIGV2ZXJ5IGdyaWRfX2NvbHVtblxuICBAaW5jbHVkZSBtZWRpYXF1ZXJ5KGwpIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICB9XG59XG5cbi5ncmlkX19jb2x1bW4ge1xuICBAaW5jbHVkZSBwYWRkaW5nKGwgMSk7XG4gIGZsZXg6IDE7XG59XG5cbiJdLCJzb3VyY2VSb290IjoiLi8ifQ== */
