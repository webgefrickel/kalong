html {
  line-height: 1.15;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%; }
h1 {
  font-size: 2em;
  margin: 0.67em 0; }
hr {
  box-sizing: content-box;
  height: 0;
  overflow: visible; }
main {
  display: block; }
pre {
  font-family: monospace, monospace;
  font-size: 1em; }
a {
  -webkit-text-decoration-skip: objects; }
abbr[title] {
  text-decoration: underline;
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted; }
b,
strong {
  font-weight: bolder; }
code,
kbd,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }
small {
  font-size: 80%; }
svg:not(:root) {
  overflow: hidden; }
button,
input,
optgroup,
select,
textarea {
  margin: 0; }
button {
  overflow: visible;
  text-transform: none; }
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }
fieldset {
  padding: 0.35em 0.75em 0.625em; }
input {
  overflow: visible; }
legend {
  box-sizing: border-box;
  color: inherit;
  display: table;
  max-width: 100%;
  padding: 0;
  white-space: normal; }
progress {
  display: inline-block;
  vertical-align: baseline; }
select {
  text-transform: none; }
textarea {
  overflow: auto; }
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }
[type="search"] {
  -webkit-appearance: textfield;
  outline-offset: -2px; }
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }
::-webkit-file-upload-button {
  -webkit-appearance: button;
  font: inherit; }
details {
  display: block; }
summary {
  display: list-item; }
template {
  display: none; }
@font-face {
  src: url("../fonts/roboto-regular.woff2") format("woff2"), url("../fonts/roboto-regular.woff") format("woff");
  font-family: Roboto;
  font-weight: 400;
  font-style: normal;
  font-display: swap; }

button,
input,
select,
textarea {
  font: inherit;
  background-color: transparent; }

[type='text'],
[type='tel'],
[type='email'],
[type='search'],
[type='number'],
[type='password'],
select,
textarea {
  padding: 0.375rem;
  padding-bottom: 0.375rem;
  border-color: #000;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 0;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none; }
  [type='text']:hover, [type='text']:active, [type='text']:focus,
  [type='tel']:hover,
  [type='tel']:active,
  [type='tel']:focus,
  [type='email']:hover,
  [type='email']:active,
  [type='email']:focus,
  [type='search']:hover,
  [type='search']:active,
  [type='search']:focus,
  [type='number']:hover,
  [type='number']:active,
  [type='number']:focus,
  [type='password']:hover,
  [type='password']:active,
  [type='password']:focus,
  select:hover,
  select:active,
  select:focus,
  textarea:hover,
  textarea:active,
  textarea:focus {
    border-color: #f78474; }

textarea {
  resize: vertical; }

fieldset {
  margin: 0;
  margin-bottom: 1.5rem;
  padding: 0;
  border: 0; }

label {
  display: block;
  cursor: pointer; }

[unselectable] {
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none; }

h1 {
  z-index: 1;
  font-size: 3rem;
  margin: 0;
  margin-bottom: 1.5rem; }

h2 {
  font-size: 2rem;
  margin: 0;
  margin-bottom: 1.5rem; }

h3 {
  font-size: 1.5rem;
  margin: 0;
  margin-bottom: 1.5rem; }

h4 {
  font-size: 1.25rem;
  margin: 0;
  margin-bottom: 1.5rem; }

h5 {
  font-size: 1rem;
  margin: 0;
  margin-bottom: 1.5rem; }

h6 {
  font-size: 0.875rem;
  margin: 0;
  margin-bottom: 1.5rem; }

a {
  text-decoration: none; }
  a:hover, a:active, a:focus {
    text-decoration: underline; }

ul,
dl,
ol {
  margin: 0;
  margin-bottom: 1.5rem;
  padding: 0;
  padding-left: 1.5rem; }

nav ul,
nav ol,
fieldset ul,
fieldset ol {
  list-style: none;
  padding: 0; }

audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle; }

audio,
iframe,
img,
video {
  max-width: 100%;
  height: auto; }

figure {
  margin: 0;
  margin-bottom: 1.5rem; }

:root {
  color: #000;
  background-color: #fff;
  box-sizing: border-box;
  line-height: 1.5;
  font-size: 16px;
  -webkit-font-kerning: normal;
          font-kerning: normal;
  font-variant-ligatures: common-ligatures contextual;
  font-feature-settings: 'kern', 'liga', 'clig', 'calt';
  -webkit-text-size-adjust: 100%;
          text-size-adjust: 100%; }

*, *::before, *::after {
  box-sizing: inherit; }

body {
  font-family: sans-serif;
  font-weight: 400;
  font-style: normal;
  background-color: #fff;
  margin: 0;
  padding: 0; }
  .fonts-loaded body {
    font-family: Roboto, sans-serif; }
  @media print {
    body * {
      display: none; }
    body::after {
      content: 'Please, do not waste paper by printing webpages.'; } }

::-moz-selection {
  background-color: #f78474;
  color: #fff;
  text-shadow: none; }

::selection {
  background-color: #f78474;
  color: #fff;
  text-shadow: none; }

table {
  margin: 0;
  margin-bottom: 1.5rem;
  width: 100%;
  border-collapse: collapse; }

td,
th {
  padding: 0;
  vertical-align: top; }

th {
  text-align: left; }

hr {
  margin-right: auto;
  margin-left: auto;
  margin-bottom: 1.5rem;
  margin-top: 0;
  display: block;
  height: 1px;
  border: 0;
  background: currentColor; }

blockquote,
pre,
p {
  margin: 0;
  margin-bottom: 1.5rem; }

.button {
  padding: 0.75rem;
  display: inline-block;
  cursor: pointer; }

.icon {
  position: relative;
  top: -0.0625em;
  display: inline-block;
  width: 1em;
  height: 1em;
  fill: currentColor; }

.grid {
  margin-left: -1.5rem;
  padding: 0;
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  justify-content: space-between;
  list-style: none; }
  @media (min-width: 720px) {
    .grid {
      flex-direction: row; } }

.grid__column {
  padding-left: 1.5rem;
  flex: 1; }

.wrapper {
  position: relative;
  display: block;
  margin-left: auto;
  margin-right: auto;
  padding: 1.5rem; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
